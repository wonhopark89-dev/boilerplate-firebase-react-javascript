{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Tweet.js","components/TweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Tweet","tweetObj","isOwner","editing","setEditing","text","newTweet","setNewTweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","class","faTrash","faPencilAlt","TweetFactory","userObj","tweet","setTweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","tweets","setTweets","useEffect","onSnapshot","snapshot","tweetArray","docs","map","marginTop","tomato","key","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","marginRight","to","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac0179dc.chunk.js","sourcesContent":["import * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import React, { useState } from 'react';\nimport { authService } from 'fbase';\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState('');\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === 'email') {\n      setEmail(value);\n    } else if (name === 'password') {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(email, password);\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input type=\"submit\" value={newAccount ? 'Create Account' : 'Sign In'} className=\"authInput authSubmit\" />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? 'Sign In' : 'Create Account'}\n      </span>\n    </>\n  );\n};\nexport default AuthForm;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTwitter, faGoogle, faGithub } from '@fortawesome/free-brands-svg-icons';\nimport { authService, firebaseInstance } from 'fbase';\nimport AuthForm from 'components/AuthForm';\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n\n    let provider;\n\n    if (name === 'google') {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === 'github') {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n\n    await authService.signInWithPopup(provider);\n  };\n\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon icon={faTwitter} color={'#04AAFF'} size=\"3x\" style={{ marginBottom: 30 }} />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button name=\"google\" onClick={onSocialClick} className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button name=\"github\" onClick={onSocialClick} className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\nexport default Auth;\n","import React, { useState } from 'react';\nimport { dbService, storageService } from 'fbase';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\n\nconst Tweet = ({ tweetObj, isOwner }) => {\n  // tweet 내용 삭제 및 변경\n  const [editing, setEditing] = useState(false);\n  const [newTweet, setNewTweet] = useState(tweetObj.text);\n\n  const onDeleteClick = async () => {\n    const isOk = window.confirm('Are you sure you want to delete this tweet ?');\n    if (isOk) {\n      // https://firebase.google.com/docs/firestore/manage-data/delete-data#top_of_page\n      // console.log(tweetObj);\n      await dbService.doc(`tweets/${tweetObj.id}`).delete(); // collection id, 앞에서 넣어줬기 때문\n      // storage 에 파일이름은 uuid(=랜덤) 으로 만들어서 알수없지만, 참조하고있는 값을 통해 삭제할 수 있다 ( 해당 값만 )\n      await storageService.refFromURL(tweetObj.attachmentUrl).delete();\n    }\n  };\n\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`tweets/${tweetObj.id}`).update({\n      text: newTweet,\n    });\n    setEditing(false);\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event; // same as event.target.value\n    setNewTweet(value);\n  };\n\n  return (\n    <div className=\"nweet\">\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\n            <input\n              type=\"text\"\n              placeholder=\"Edit your tweet\"\n              value={newTweet}\n              required\n              onChange={onChange}\n              autoFocus\n              className=\"formInput\"\n            />\n            <input type=\"submit\" value=\"Update Tweet\" className=\"formBtn\"></input>\n            <button className=\"formBtn cancelBtn\" onClick={toggleEditing}>\n              Cancel\n            </button>\n          </form>\n        </>\n      ) : (\n        <>\n          <h4>{tweetObj.text}</h4>\n          {tweetObj.attachmentUrl && <img src={tweetObj.attachmentUrl} />}\n          {isOwner && (\n            <div class=\"nweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Tweet;\n","import React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { storageService, dbService } from 'fbase';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nconst TweetFactory = ({ userObj }) => {\n  const [tweet, setTweet] = useState('');\n  const [attachment, setAttachment] = useState('');\n  const onSubmit = async (event) => {\n    if (tweet === '') {\n      return;\n    }\n\n    event.preventDefault();\n    let attachmentUrl = '';\n    if (attachment !== '') {\n      const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, 'data_url');\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const tweetObj = {\n      text: tweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    await dbService.collection('tweets').add(tweetObj);\n    setTweet('');\n    setAttachment('');\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setTweet(value);\n  };\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const onClearAttachment = () => setAttachment('');\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={tweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What`s on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label for=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img src={attachment} style={{ backgroundImage: attachment }} />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default TweetFactory;\n","import React, { useState, useEffect } from 'react';\nimport { dbService } from 'fbase';\nimport Tweet from 'components/Tweet';\nimport TweetFactory from 'components/TweetFactory';\n\nconst Home = ({ userObj }) => {\n  const [tweets, setTweets] = useState([]);\n\n  useEffect(() => {\n    dbService.collection('tweets').onSnapshot((snapshot) => {\n      const tweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setTweets(tweetArray);\n    });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <TweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {tweets.map((tomato) => (\n          <Tweet key={tomato.id} tweetObj={tomato} isOwner={tomato.creatorId === userObj.uid} />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","import React, { useState } from 'react';\nimport { authService } from 'fbase';\nimport { useHistory } from 'react-router-dom';\n\nconst Profile = ({ refreshUser, userObj }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push('/');\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n\n    setNewDisplayName(value);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      // https://firebase.google.com/docs/reference/js/firebase.User\n      await userObj.updateProfile({ displayName: newDisplayName });\n    }\n    refreshUser();\n  };\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          autoFocus\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"Display your name\"\n          value={newDisplayName}\n          className=\"formInput\"\n        />\n        <input type=\"submit\" value=\"Update Profile\" className=\"formBtn\" style={{ marginTop: 10 }} />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\n\nconst Navigation = ({ userObj }) => {\n  console.log(userObj);\n  return (\n    <nav>\n      <ul style={{ display: 'flex', justifyContent: 'center', marginTop: 50 }}>\n        <li>\n          <Link style={{ marginRight: 10 }} to=\"/\">\n            <FontAwesomeIcon icon={faTwitter} color={'#04AAFF'} size=\"2x\" />\n          </Link>\n        </li>\n        <li>\n          <Link\n            style={{\n              marginLeft: 10,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              fontSize: 12,\n            }}\n            to=\"/profile\"\n          >\n            <FontAwesomeIcon icon={faUser} color={'#04AAFF'} size=\"2x\" />\n            <span style={{ marginTop: 10 }}>\n              {userObj.displayName ? `${userObj.displayName}의 Profile` : 'Profile'}\n            </span>\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Auth from 'routes/Auth';\nimport Home from 'routes/Home';\nimport Profile from 'routes/Profile';\nimport Navigation from 'components/Navigation';\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <div\n            style={{\n              maxWidth: 890,\n              width: '100%',\n              margin: '0 auto',\n              marginTop: 80,\n              display: 'flex',\n              justifyContent: 'center',\n            }}\n          >\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </div>\n        ) : (\n          <Route exact path=\"/\">\n            <Auth />\n          </Route>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { useState, useEffect } from 'react';\nimport AppRouter from 'components/Router';\nimport { authService } from 'fbase';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null); // 로그인 시 유저정보를 넣어준다\n\n  useEffect(() => {\n    // login, logout\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        // setUserObj(user); // user object is so big\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj} />\n      ) : (\n        'Initializing...'\n      )}\n      <div style={{ display: 'flex', justifyContent: 'center', marginTop:50 }}>\n        <footer>&copy; {new Date().getFullYear()} Twitter</footer>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}